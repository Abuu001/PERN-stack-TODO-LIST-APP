[{"/media/lugonzo/New Volume/Web projects/React/postgres toDo app/postgres-todo-app/frontend/src/index.js":"1","/media/lugonzo/New Volume/Web projects/React/postgres toDo app/postgres-todo-app/frontend/src/App.js":"2","/media/lugonzo/New Volume/Web projects/React/postgres toDo app/postgres-todo-app/frontend/src/reportWebVitals.js":"3","/media/lugonzo/New Volume/Web projects/React/postgres toDo app/postgres-todo-app/frontend/src/components/InputTodo.js":"4","/media/lugonzo/New Volume/Web projects/React/postgres toDo app/postgres-todo-app/frontend/src/components/ListTodo.js":"5","/media/lugonzo/New Volume/Web projects/React/postgres toDo app/postgres-todo-app/frontend/src/components/EditTodo.js":"6"},{"size":500,"mtime":1608460342299,"results":"7","hashOfConfig":"8"},{"size":249,"mtime":1608494223926,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1608460342312,"results":"10","hashOfConfig":"8"},{"size":1049,"mtime":1608545013595,"results":"11","hashOfConfig":"8"},{"size":1883,"mtime":1608544043054,"results":"12","hashOfConfig":"8"},{"size":1797,"mtime":1608545118391,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1rwksl4",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},"/media/lugonzo/New Volume/Web projects/React/postgres toDo app/postgres-todo-app/frontend/src/index.js",[],["29","30"],"/media/lugonzo/New Volume/Web projects/React/postgres toDo app/postgres-todo-app/frontend/src/App.js",[],"/media/lugonzo/New Volume/Web projects/React/postgres toDo app/postgres-todo-app/frontend/src/reportWebVitals.js",[],"/media/lugonzo/New Volume/Web projects/React/postgres toDo app/postgres-todo-app/frontend/src/components/InputTodo.js",[],"/media/lugonzo/New Volume/Web projects/React/postgres toDo app/postgres-todo-app/frontend/src/components/ListTodo.js",["31","32"],"import React,{useEffect,useState} from 'react';\nimport EditTodo from \"./EditTodo\"\n\nfunction ListTodo() {\n  \n    const [getDescription,setDescription]= useState([])\n    const getTodos= async ()=>{\n        try {\n            const response = await fetch(\"http://localhost:3004/todos\")\n            const result = await response.json();\n            setDescription(...getDescription,result)\n            console.log(result);\n   \n        } catch (error) {\n            console.log(error.message);\n        }\n    }\n\n    const deleteTodo=async (id)=>{\n        try {\n            const deleteTodo = await fetch(`http://localhost:3004/todos/${id}`,{\n                method:\"DELETE\",\n            })\n            console.log(\"Deleted Sucessfully\");\n            setDescription(getDescription.filter(todo=>todo.todo_id !== id))\n        } catch (error) {\n            console.log(error.message);\n        }\n    }\n\n    useEffect(()=>{\n        getTodos()\n    },[])\n    return (\n        <div>\n            <h1 className=\"text-center \"> List Todo</h1>\n            <table className=\"table text-center\">\n                <thead>\n                <tr>\n                    <th>Description</th>\n                    <th>Edit</th>\n                    <th>Delete</th>\n                </tr>\n                </thead>\n                <tbody>\n                    {\n                        getDescription.map(desc=>(\n                            <tr  key={desc.todo_id}>\n                                <td>{desc.description}</td>\n                                <td><EditTodo getDescription={getDescription} /></td>\n                                <td><button className=\"btn btn-danger\" onClick={()=>deleteTodo(desc.todo_id)}>Delete</button></td>\n                              </tr>\n                        ))\n                    }\n                </tbody>\n            </table>\n        </div>\n    )\n}\n\nexport default ListTodo\n","/media/lugonzo/New Volume/Web projects/React/postgres toDo app/postgres-todo-app/frontend/src/components/EditTodo.js",["33"],"import React,{Fragment,useState} from 'react'\n\n\nfunction EditTodo({getDescription}) {\n    const [desc,setDesc]=useState(getDescription.desc);\n\n    const updateDescription= async (e)=>{\n        e.preventDefault();\n        const body ={desc}\n        const response = await fetch(`http://localhost:3004/todos/${getDescription.todo_id}}`,{\n            method:\"PUT\",\n            headers:{\"Content-Type\":\"application/json\"},\n            body:JSON.stringify(body)\n        })\n\n        window.location=\"/\"\n    }\n    return (\n        <Fragment>\n            <button type=\"button\" className=\"btn btn-warning\" data-toggle=\"modal\" data-target={`#id${getDescription.todo_id}`}>\n                Edit\n            </button>\n \n            <div className=\"modal\" id={`id${getDescription.todo_id}`}>\n            <div className=\"modal-dialog\">\n                <div className=\"modal-content\">\n \n                <div className=\"modal-header\">\n                    <h4 className=\"modal-title\">Edit Todo</h4>\n                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\">&times;</button>\n                </div>\n \n                <div className=\"modal-body\">\n                  <input type=\"text\" className=\"form-control\" value={desc} onChange={e=>setDesc(e.target.value)}        />\n                </div>\n\n                <div className=\"modal-footer\">\n                    <button type=\"button\" className=\"btn btn-warning\" data-dismiss=\"modal\">Edit</button>\n                </div>\n\n                <div className=\"modal-footer\">\n                    <button type=\"button\" className=\"btn btn-danger\" data-dismiss=\"modal\" onClick={e=>updateDescription(e)}>Close</button>\n                </div>\n\n                </div>\n            </div>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default EditTodo\n",{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":21,"column":19,"nodeType":"40","messageId":"41","endLine":21,"endColumn":29},{"ruleId":"42","severity":1,"message":"43","line":33,"column":7,"nodeType":"44","endLine":33,"endColumn":9,"suggestions":"45"},{"ruleId":"38","severity":1,"message":"46","line":10,"column":15,"nodeType":"40","messageId":"41","endLine":10,"endColumn":23},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"no-unused-vars","'deleteTodo' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getTodos'. Either include it or remove the dependency array.","ArrayExpression",["49"],"'response' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"50","fix":"51"},"Update the dependencies array to be: [getTodos]",{"range":"52","text":"53"},[936,938],"[getTodos]"]